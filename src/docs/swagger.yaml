openapi: 3.0.0
info:
    title: House Sale API Documentation
    version: 1.0.0
servers:
    -   url: http://localhost:3000/v1/api
    -   url: https://housesale.tldev.id.vn/v1/api
tags:
    -   name: Feature
    -   name: Category
    -   name: Property
    -   name: User
    -   name: Location
    -   name: Seller
    -   name: Contact
    -   name: Favorite Property
    -   name: Transaction
    -   name: Admin - Manage User
    -   name: Admin - Manage Property
paths:
    /features:
        get:
            tags:
                - Feature
            summary: Get all features (UPDATED 28/02)
            description: Get all features
            operationId: getAllFeatures
            responses:
                '200':
                    description: Get list features successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list features successfully!
                                    metaData:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                featureId:
                                                    type: number
                                                    example: 1
                                                name:
                                                    type: string
                                                    example: Sale
                '400':
                    description: Failed to get list features!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get list features!
    /categories:
        get:
            tags:
                - Category
            summary: Get all categories (UPDATED 28/02)
            description: Get all categories
            operationId: getAllCategories
            responses:
                '200':
                    description: Get list categories successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list categories successfully!
                                    metaData:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                categoryId:
                                                    type: number
                                                    example: 1
                                                name:
                                                    type: string
                                                    example: Apartment
                '400':
                    description: Failed to get list categories!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get list categories!
    /properties:
        get:
            tags:
                - Property
            summary: Get all properties (UPDATED 28/02)
            description: Get all properties by queries
            operationId: getAllProperties
            parameters:
                -   name: keyword
                    in: query
                    description: A keyword to search for properties
                    required: false
                    schema:
                        type: string
                        example: apart
                -   name: featureId
                    in: query
                    description: The ID of feature
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                -   name: categoryId
                    in: query
                    description: The ID of category
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                -   name: provinceCode
                    in: query
                    description: The code of province
                    required: false
                    schema:
                        type: string
                        example: 48
                -   name: districtCode
                    in: query
                    description: The code of district
                    required: false
                    schema:
                        type: string
                        example: 493
                -   name: wardCode
                    in: query
                    description: The code of ward
                    required: false
                    schema:
                        type: string
                        example: 20275
                -   name: priceFrom
                    in: query
                    description: The minimum price of a property
                    required: false
                    schema:
                        type: number
                -   name: priceTo
                    in: query
                    description: The maximum price of a property
                    required: false
                    schema:
                        type: number
                -   name: landAreaFrom
                    in: query
                    description: The minimum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: landAreaTo
                    in: query
                    description: The maximum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseFrom
                    in: query
                    description: The minimum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseTo
                    in: query
                    description: The maximum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorFrom
                    in: query
                    description: The minimum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorTo
                    in: query
                    description: The maximum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomFrom
                    in: query
                    description: The minimum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomTo
                    in: query
                    description: The maximum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletFrom
                    in: query
                    description: The minimum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletTo
                    in: query
                    description: The maximum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt','updatedAt','price']
                        default: 'createdAt'
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
                        default: 'desc'
            responses:
                '200':
                    description: Get list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list properties successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 2
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 12
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get list properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                -   Failed to get list properties!
                                                -   Invalid Feature!
                                                -   Invalid Category!
                                                -   Invalid Province!
                                                -   Invalid District!
                                                -   Invalid Ward!
    /properties/{propertyId}:
        get:
            tags:
            -   Property
            summary: Get property by Id (UPDATED 28/02)
            description: Returns a single property
            operationId: getProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of propertyId to return
                required: true
                schema:
                    type: number
                    example: 1
            responses:
                '200':
                    description: Get property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get property successfully!
                                    metaData:
                                        $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
    /location/provinces:
        get:
            tags:
                - Location
            summary: Get all provinces (UPDATED 28/02)
            description: Get all provinces
            operationId: getAllProvinces
            responses:
                '200':
                    description: Get list provinces successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list provinces successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Province'
                '400':
                    description: Failed to get list provinces!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get list provinces!
                '404':
                    description: No province found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: No province found!
    /location/districts:
        get:
            tags:
            - Location
            summary: Get all district by provinceCode (UPDATED 28/02)
            description: get all district by provinceCode
            operationId: getAllDistrictsByProvinceCode
            parameters:
            -   name: provinceCode
                in: query
                description: provinceCode of province to get all district
                required: true
                schema:
                    type: string
                    example: 48
            responses:
                '200':
                    description: Get list districts successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list districts success!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/District'
                '400':
                    description: Failed to get list districts!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid province. Please try again!
                                                    -   Failed to get list districts!
                                                    -   Province code is required!
                '404':
                    description: No district found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: No district found!
    /location/wards:
        get:
            tags:
            - Location
            summary: Get all wards by districtCode (UPDATED 28/02)
            description: get all wards by districtCode
            operationId: getAllWardsByDistrictCode
            parameters:
            -   name: districtCode
                in: query
                description: districtCode of ward to get all wards
                required: true
                schema:
                    type: string
                    example: 490
            responses:
                '200':
                    description: Get list wards successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list wards successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Ward'
                '400':
                    description: Get all wards failed!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid district. Please try again!
                                                    -   Failed to get list wards!
                                                    -   District code is required!
                '404':
                    description: No ward found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: No ward found!
    /user/login-with-google:
        post:
            tags:
                - User
            summary: Login with Google (UPDATED)
            description: Login with Google account and create new user if not exists
            operationId: loginWithGoogle
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: nhattrinh.le.it@gmail.com
                                fullName:
                                    type: string
                                    example: Le Nhat Trinh
                                accessToken:
                                    type: string
                                    example: ya29.a0AfB_byCOM7ZN5OwZufgwFPU8A6AjjkTqkE3bRGy9lK8-WpxYiqWsK0w8eNxpCQByOyAx1u3zXF6jfcyQsgw_g4HCNQapLt3VY4CMsYYj9PTmeYmruWDGnXTx5pcT7v3pyLQh2j9MtxY2JjR-Fz-115EKumts9IqWxU4aCgYKARsSARASFQHGX2Mi8zlej3VgBu267rnav1JUjg0170
                            required:
                                - "email"
                                - "fullName"
                                - "accessToken"
            responses:
                '200':
                    description: Login with Google successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Login with Google successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            user:
                                                $ref: '#/components/schemas/User'
                                            tokens:
                                                $ref: '#/components/schemas/Tokens'
                '400':
                    description: Login with Google failed!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to login with Google!
                                                    -   Failed to create tokens!
                                                    -   Invalid client ID!
                                                    -   Invalid google access token!
    /user/register-user:
        post:
            tags:
                - User
            summary: Create new user (UPDATED)
            description: Create new user
            operationId: registerUser
            requestBody:
                description: User email and password
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserBody'
                required: true
            responses:
                '201':
                    description: Registration success for new user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Registration success for new user!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to create new user!
                '403':
                    description: DuplicateEmail
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your email already exists! Please register with another email!
    /user/register-seller:
        post:
            tags:
                - User
            summary: Create new seller (UPDATED)
            description: Create new seller, send verification email to seller's email
            operationId: registerSeller
            requestBody:
                description: Seller information
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewSeller'
                required: true
            responses:
                '201':
                    description: Registration success for new user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Registration success for new seller! Please check your email to verify your account!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Invalid Province. Invalid District. Invalid Ward. Failed to create new seller!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: This ward is not available yet. Please try again.
                '403':
                    description: DuplicateEmail
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your email already exists! Please register with another email!
    /user/login:
        post:
            tags:
                - User
            summary: Login to access system (UPDATED)
            description: Login to access system
            operationId: login
            requestBody:
                description: Login success
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserBody'
                required: true
            responses:
                '200':
                    description: Login success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Login success!
                                    metaData:
                                        type: object
                                        properties:
                                            user:
                                                $ref: '#/components/schemas/User'
                                            tokens:
                                                $ref: '#/components/schemas/Tokens'
                '400':
                    description: Failed to create tokens!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to create tokens!
                '401':
                    description: Incorrect email or password!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                example: Incorrect email or password!
                '403':
                    description: Your account is not active! or Email not verified! (For seller)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                enum:
                                                    -  Your account is not active!
                                                    -  Your email has not been verified. Please check your email and verify it!
                '404':
                    description: Email not registered!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Email not registered!
    /user/refreshTokens:
        post:
            tags:
                - User
            summary: Refresh Tokens (UPDATED)
            description: Refresh Tokens
            operationId: refreshTokens
            requestBody:
                description: refreshToken
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                              refreshToken:
                                type: string
                                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImlhdCI6MTcwNzQ0Mzc0MywiZXhwIjoxNzA4MDQ4NTQzLCJ0eXBlIjoicmVmcmVzaCJ9.xbR_ZLbKphz3161exK3HpoWPmh8GH6w3Gu0USDv8nko
                            required:
                              - "refreshToken"
                required: true
            responses:
                '201':
                    description: Refresh tokens successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Refresh tokens successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            tokens:
                                                $ref: '#/components/schemas/Tokens'
                '400':
                    description: Failed to create tokens!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to verify refreshToken!
                                                    -   Failed to remove tokens!
                                                    -   Failed to create tokens!
                '404':
                    description: Tokens or user not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   Tokens not found!
                                                    -   User not found!
    /user/verify-email/{userId}/{code}:
        get:
            tags:
                - User
            summary: Verify email (UPDATED)
            description: Verify seller email when register seller account or user upgrade to seller or user upgrade to seller. System send a verify link to seller's email, seller must verify email to access system
            operationId: verifyEmail
            parameters:
                -   name: userId
                    in: path
                    description: ID of user
                    required: true
                    schema:
                        type: number
                        example: 44
                -   name: code
                    in: path
                    description: code to verify email
                    required: true
                    schema:
                        type: string
                        format: uuid
                        example: e916faf0-3123-4fcc-8ec3-9a2c2bb4b38c44
            responses:
                '302':
                    description: Alert notification about result of verify email and redirect to home page (https://house-sale-three.vercel.app/home)
    /user/logout:
        post:
            tags:
                - User
            summary: Logout (UPDATED)
            description: Logout
            operationId: logout
            requestBody:
                description: Refresh Token
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                              refreshToken:
                                type: string
                                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImlhdCI6MTcwNzQ0Mzc0MywiZXhwIjoxNzA4MDQ4NTQzLCJ0eXBlIjoicmVmcmVzaCJ9.xbR_ZLbKphz3161exK3HpoWPmh8GH6w3Gu0USDv8nko
                            required:
                              - "refreshToken"
                required: true
            responses:
                '200':
                    description: Logout success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Logout success!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to logout!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to logout!
                                                    -   Failed to get tokens!
                                                    -   Failed to remove tokens!
                '401':
                    description: Unauthorized or Invalid accessToken!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -   Invalid accessToken!
                '404':
                    description: RefreshToken not valid!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: RefreshToken not valid!
            security:
                - bearerAuth: []
    /user/change-password:
        post:
            tags:
                - User
            summary: Change user password (UPDATED)
            description: Change user password
            operationId: changePassword
            requestBody:
                description: current password and new password
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                currentPassword:
                                    type: string
                                    example: T12345678
                                newPassword:
                                    type: string
                                    example: T123456789
                            required:
                              - "currentPassword"
                              - "newPassword"
                required: true
            responses:
                '200':
                    description: 'Your password has been changed successfully!'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your password has been changed successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to change your password!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to change your password!
                                                enum:
                                                    -   Failed to change your password!
                                                    -   New Password cannot be same as your current password. Please choose a different password!

                '401':
                    description: Unauthorized or Incorrect current password!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Incorrect current password!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /user/profile:
        get:
            tags:
            -   User
            summary: Get user profile  (UPDATED)
            description: Returns a user profile
            operationId: getProfile
            responses:
                '200':
                    description: Get your profile successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get your profile successfully!
                                    metaData:
                                        $ref: '#/components/schemas/User'
                '400':
                    description: User profile not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   User profile not found!
                                                    -   userId is required!
                                                    -   Failed to get user!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
              - bearerAuth: []
        patch:
            tags:
            -   User
            summary: Update user profile (UPDATED)
            description: Update a user profile
            operationId: updateProfile
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateUserProfile'
            responses:
                '200':
                    description: Your profile had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Your profile had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Nothing to update!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Nothing to update!
                                                    -   userId is required!
                                                    -   Failed to update your profile!
                                                    -   New phone number cannot be same as your current phone number. Please choose a different phone number!
                                                    -   Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                                                    -   Invalid province. Please try again!
                                                    -   Invalid district. Please try again!
                                                    -   Invalid ward. Please try again!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
              - bearerAuth: []
    /user/update-avatar:
        post:
            tags:
                - User
            summary: Update user avatar (UPDATED)
            description: Update user avatar
            operationId: updateAvatar
            requestBody:
                description: new avatar url
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                imageUrl:
                                    type: string
                                    example: https://res.cloudinary.com/housesale/image/upload/v1706774835/avatar/32/avatar.png
                            required:
                              - "imageUrl"
                required: true
            responses:
                '200':
                    description: Your avatar had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your avatar had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update your avatar!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update your avatar!
                                                    -   userId is required!
                                                    -   User not found!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found
            security:
                - bearerAuth: []
    /user/upgrade-seller:
        post:
            tags:
                - User
            summary: Upgrade user to seller (UPDATED)
            description: Upgrade user to seller, fulfill seller information and send verification email to seller's email
            operationId: upgradeSeller
            requestBody:
                description: Seller information
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                fullName:
                                    type: string
                                    example: John Doe
                                phone:
                                    type: string
                                    example: 0888888776
                                provinceCode:
                                    type: string
                                    example: 48
                                districtCode:
                                    type: string
                                    example: 493
                                wardCode:
                                    type: string
                                    example: 20275
                                street:
                                    type: string
                                    example: Bach Dang
                                address:
                                    type: string
                                    example: 107
                            required:
                                - "fullName"
                                - "phone"
                                - "provinceCode"
                                - "districtCode"
                                - "wardCode"
                                - "street"
                required: true
            responses:
                '200':
                    description: Your upgrade request has been sent! Please check your email to confirm!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your upgrade request has been sent! Please check your email to confirm!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Invalid or missing recipient email address!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Upgrade to seller failed!
                                                enum:
                                                    -   userId is required!
                                                    -   Failed to generate email verification code!
                                                    -   Invalid or missing recipient email address!
                                                    -   Failed to update user!
                                                    -   Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                                                    -   Invalid province. Please try again!
                                                    -   Invalid district. Please try again!
                                                    -   Invalid ward. Please try again!

                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
                '424':
                    description: Failed to send email!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 424
                                            message:
                                                type: string
                                                example: Failed to send email!
            security:
                - bearerAuth: []
    /seller/properties:
        get:
            tags:
                - Seller
            summary: Get all properties (UPDATED 28/02)
            description: Get all properties by queries
            operationId: getAllPropertiesBySeller
            parameters:
                -   name: keyword
                    in: query
                    description: A keyword to search for properties
                    required: false
                    schema:
                        type: string
                        example: apart
                -   name: featureId
                    in: query
                    description: The ID of feature
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                -   name: categoryId
                    in: query
                    description: The ID of category
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                -   name: priceFrom
                    in: query
                    description: The minimum price of a property
                    required: false
                    schema:
                        type: number
                -   name: priceTo
                    in: query
                    description: The maximum price of a property
                    required: false
                    schema:
                        type: number
                -   name: landAreaFrom
                    in: query
                    description: The minimum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: landAreaTo
                    in: query
                    description: The maximum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseFrom
                    in: query
                    description: The minimum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseTo
                    in: query
                    description: The maximum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorFrom
                    in: query
                    description: The minimum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorTo
                    in: query
                    description: The maximum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomFrom
                    in: query
                    description: The minimum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomTo
                    in: query
                    description: The maximum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletFrom
                    in: query
                    description: The minimum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletTo
                    in: query
                    description: The maximum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['Price', 'price']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list properties successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyOfSeller'
                '400':
                    description: Failed to get list properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                -   Failed to get list properties!
                                                -   Invalid Feature!
                                                -   Invalid Category!
                                                -   Invalid Province!
                                                -   Invalid District!
                                                -   Invalid Ward!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
              - bearerAuth: []
        post:
            tags:
                - Seller
            summary: Create new property by seller (UPDATED 28/02)
            description: Create new property by seller (if your balance > 20$ to create new property)
            operationId: createNewProperty
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewPropertyBody'
            responses:
                '201':
                    description: New property had been created successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: New property had been created successfully!
                                    metaData:
                                        $ref: '#/components/schemas/NewPropertyResponse'


                '400':
                    description: Not enough money!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Your balance is not enough to create new property. Please refill your balance!
                                                    -   Failed to create new location!
                                                    -   Invalid Province!
                                                    -   Invalid District!
                                                    -   Invalid Ward!
                                                    -   Failed to create new property!
                                                    -   Invalid amount!
                                                    -   Failed to init expense transaction!
                                                    -   Failed to update user balance!
                                                    -   Failed to save image!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
              - bearerAuth: []
    /seller/properties/{propertyId}:
        get:
            tags:
            -   Seller
            summary: Get property of seller by Id (UPDATED 28/02)
            description: Returns a single property
            operationId: getProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of propertyId to return
                required: true
                schema:
                    type: number
                    example: 1
            responses:
                '200':
                    description: Get property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get property successfully!
                                    metaData:
                                        $ref: '#/components/schemas/PropertyOfSeller'
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
              - bearerAuth: []
        patch:
            tags:
            -   Seller
            summary: Update property by Id (UPDATED 28/02)
            description: Update a property
            operationId: updateProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of property to update
                required: true
                schema:
                    type: number
                    example: 31
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UpdatePropertyBody'
            responses:
                '200':
                    description: Update property success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        enum:
                                            -   Your property had been updated successfully!
                                            -   No changes made!
                                    metaData:
                                        type: string
                                        example: 1
                '400':
                    description: Failed to update property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to update property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
              - bearerAuth: []
        delete:
            tags:
            -   Seller
            summary: Delete property by Id (UPDATED 28/02)
            description: Delete a property
            operationId: deleteProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of property to delete
                required: true
                schema:
                    type: number
                    example: 31
            responses:
                '200':
                    description: Delete property success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Your property had been deleted successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete property
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to delete property
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
              - bearerAuth: []
    /contact:
        post:
            tags:
              - Contact
            summary: Create new contact and send to seller (UPDATED 29/02)
            description: Create new contact and send to seller
            operationId: createNewContact
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/NewContactBody'
                        required: true
            responses:
                '201':
                    description: New contact had been created successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Your contact had been sent successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new contact!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to create new contact!
                                                    -   Invalid or missing recipient email address!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
                '424':
                    description: Failed to send email!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 424
                                            message:
                                                type: string
                                                example: Failed to send email!
    /favorites-list:
        get:
            tags:
              - "Favorite Property"
            summary: Get all properties in user's favorites list (UPDATED 29/02)
            description: Get all properties in user's favorites list
            operationId: getFavoritesProperty
            responses:
                '200':
                    description: Get your favorites list successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get your favorites list successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            count:
                                                type: number
                                                example: 1
                                            favoritesList:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get favorites list!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get favorites list!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
        post:
            tags:
                - "Favorite Property"
            summary: Update user's favorites list (UPDATED 29/02)
            description: Update user's favorites list. Add property to favorites list or remove property from favorites list if it already exists.
            operationId: updateFavoritesProperty
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            propertyId:
                                type: number
                                example: 15
                        required:
                          - "propertyId"
            responses:
                '200':
                    description: Your favorites list had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your favorites list had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to add to favorites list!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to add to favorites list!
                                                    -   Failed to update favorite property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found! or Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   User not found!
                                                    -   Property not found!
            security:
                - bearerAuth: []
    /transaction:
        get:
            tags:
                - Transaction
            summary: Get all user transactions (deposit, expense)
            description: Get all transactions by queries (fromDate - toDate)
            operationId: getAllTransactions
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date of the range to filter transactions.
                    required: false
                    schema:
                        type: string
                        format: date-time
                        example: 2024-02-19
                        default: 7 days before today
                -   name: toDateRange
                    in: query
                    description: The end date of the range to filter transactions.
                    required: false
                    schema:
                        type: string
                        format: date-time
                        example: 2024-02-22
                        default: today
            responses:
                '200':
                    description: Get all transactions successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:   Get list transactions success!
                                    metaData:
                                        type: object
                                        properties:
                                            depositTransactions:
                                                type: object
                                                properties:
                                                    count:
                                                        type: number
                                                        example: 27
                                                    transactions:
                                                        type: array
                                                        items:
                                                            $ref: '#/components/schemas/DepositTransaction'
                                            expenseTransactions:
                                                type: object
                                                properties:
                                                    count:
                                                        type: number
                                                        example: 3
                                                    transactions:
                                                        type: array
                                                        items:
                                                            $ref: '#/components/schemas/ExpenseTransaction'
                '400':
                    description: Error occurred when get list transactions
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Error occurred when get all transactions
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found
            security:
                - bearerAuth: []
    /transaction/deposit:
        post:
            tags:
                - Transaction
            summary: Deposit money to user's balance
            description: Deposit money to user's balance
            operationId: depositUserBalance
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            amount:
                                type: number
                                format: decimal(10,2)
                                example: 50.5
                        required:
                          - "amount"
            responses:
                '200':
                    description: Deposit money to user's balance successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your balance has been added 50.5$ successfully! Your current balance is 603.00$
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Invalid amount, Error occurred when deposit into your balance, Error occurred when updated your balance
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Invalid amount
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/manage-user:
        get:
            tags:
                - Admin - Manage User
            summary: Get all users (NEW)
            description: Get all users by queries
            operationId: getAllUsers
            parameters:
                -   name: roleId
                    in: query
                    description: The ID of role
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                            - 3
                -   name: email
                    in: query
                    description: A email-keyword to search for users
                    required: false
                    schema:
                        type: string
                        example: nhattrinh
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                        default: 1
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                        default: 10
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt', 'updatedAt','email', 'fullName']
                        default: 'createdAt'
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['asc', 'desc']
                        default: 'desc'
            responses:
                '200':
                    description: Get list users success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:   Get list users success!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/User'
                '400':
                    description: Failed to get all users!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all users!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/manage-user/{userId}:
        get:
            tags:
            -   Admin - Manage User
            summary: Get user by Id (NEW)
            description: Returns a user by Id
            operationId: getUserById
            parameters:
            -   name: userId
                in: path
                description: Id of user to return
                required: true
                schema:
                    type: number
                    example: 5
            responses:
                '200':
                    description: Get user successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get user successfully!
                                    metaData:
                                        $ref: '#/components/schemas/User'
                '400':
                    description: Failed to get user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get user!
                                                    -   userId is required!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
        delete:
            tags:
            -   Admin - Manage User
            summary: Delete user by Id (NEW)
            description: Delete a user by Id
            operationId: deleteUserById
            parameters:
            -   name: userId
                in: path
                description: Id of user to delete
                required: true
                schema:
                    type: number
                    example: 5
            responses:
                '200':
                    description: Delete user successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Delete user successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to delete user!
                                                    -   userId is required!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
        patch:
            tags:
                - Admin - Manage User
            summary: Update user by Id (NEW)
            description: Update user by Id
            operationId: updateUserById
            parameters:
                -   name: userId
                    in: path
                    description: Id of user to update
                    required: true
                    schema:
                        type: number
                        example: 83
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateUserBodyByAdmin'
            responses:
                '200':
                    description: Update user successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Update user successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                                                    -   Failed to update user!
                                                    -   userId is required!
                                                    -   Nothing to update!
                                                    -   New phone number cannot be same as your current phone number. Please choose a different phone number!
                                                     -   Invalid province. Please try again!
                                                    -   Invalid district. Please try again!
                                                    -   Invalid ward. Please try again!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-user/{userId}/active:
        patch:
            tags:
            -   Admin - Manage User
            summary: Update user active status by Id (NEW)
            description: Update user active status by Id
            operationId: updateUserActiveStatus
            parameters:
            -   name: userId
                in: path
                description: Id of user to update active status
                required: true
                schema:
                    type: number
                    example: 5
            responses:
                '200':
                    description: Update user active status successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        enum:
                                            - User has been successfully activated!
                                            - User has been successfully deactivated!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update user active status!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update user active status!
                                                    -   userId is required!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-user/{userId}/reset-password:
        post:
            tags:
            -   Admin - Manage User
            summary: Reset user password by Id (NEW)
            description: Reset user password and send email contain new password to user
            operationId: resetUserPassword
            parameters:
            -   name: userId
                in: path
                description: Id of user to reset password
                required: true
                schema:
                    type: number
                    example: 83
            responses:
                '200':
                    description: Reset user password successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Reset user password successfully! New password has been sent to user's email!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to reset user password, userId is required!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to reset user password!
                                                    -   userId is required!
                                                    -   Invalid email or newPassword!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
                '424':
                    description: Failed to send email to user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 424
                                            message:
                                                type: string
                                                example: Failed to send email to user!
            security:
                - bearerAuth: []
    /admin/manage-property:
        get:
            tags:
                - Admin - Manage Property
            summary: Get all properties by ADMIN (NEW)
            description: Get all properties by queries
            operationId: getAllPropertiesByAdmin
            parameters:
                -   name: userId
                    in: query
                    description: The ID of user who created the property
                    required: false
                    schema:
                        type: string
                        example: 2
                -   name: keyword
                    in: query
                    description: A keyword to search for properties
                    required: false
                    schema:
                        type: string
                        example: apart
                -   name: featureId
                    in: query
                    description: The ID of feature
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                -   name: categoryId
                    in: query
                    description: The ID of category
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                -   name: provinceCode
                    in: query
                    description: The code of province
                    required: false
                    schema:
                        type: string
                        example: 48
                -   name: districtCode
                    in: query
                    description: The code of district
                    required: false
                    schema:
                        type: string
                        example: 493
                -   name: wardCode
                    in: query
                    description: The code of ward
                    required: false
                    schema:
                        type: string
                        example: 20275
                -   name: priceFrom
                    in: query
                    description: The minimum price of a property
                    required: false
                    schema:
                        type: number
                -   name: priceTo
                    in: query
                    description: The maximum price of a property
                    required: false
                    schema:
                        type: number
                -   name: landAreaFrom
                    in: query
                    description: The minimum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: landAreaTo
                    in: query
                    description: The maximum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseFrom
                    in: query
                    description: The minimum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseTo
                    in: query
                    description: The maximum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorFrom
                    in: query
                    description: The minimum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorTo
                    in: query
                    description: The maximum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomFrom
                    in: query
                    description: The minimum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomTo
                    in: query
                    description: The maximum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletFrom
                    in: query
                    description: The minimum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletTo
                    in: query
                    description: The maximum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt','updatedAt','price']
                        default: 'createdAt'
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
                        default: 'desc'
            responses:
                '200':
                    description: Get list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:   Get list properties successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get all properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all properties!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-property/{propertyId}:
        get:
            tags:
            -   Admin - Manage Property
            summary: Get property by ADMIN (NEW)
            description: Returns a property by Id
            operationId: getPropertyById
            responses:
                '200':
                    description: Get property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get property successfully!
                                    metaData:
                                        $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
                - bearerAuth: []
        delete:
            tags:
            -   Admin - Manage Property
            summary: Delete property by ADMIN (NEW)
            description: Delete a property by Id
            operationId: deletePropertyById
            responses:
                '200':
                    description: Delete property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Delete property successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
                - bearerAuth: []
    /admin/manage-property/{propertyId}/active:
        patch:
            tags:
            -   Admin - Manage Property
            summary: Update property status by ADMIN (NEW)
            description: Update property status by Id
            operationId: updatePropertyStatus
            parameters:
            -   name: propertyId
                in: path
                description: Id of property to update status
                required: true
                schema:
                    type: number
                    example: 5
            responses:
                '200':
                    description: Update property status successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        enum:
                                            - Property has been successfully activated!
                                            - Property has been successfully deactivated!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update property status!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update property status!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
                - bearerAuth: []
components:
    schemas:
        Property:
            type: object
            properties:
                propertyId:
                    type: number
                    example: 17
                userId:
                    type: number
                    example: 5
                name:
                    type: string
                    example: Apartment for sale at Alphanam Luxury Apartment Danang
                code:
                    type: string
                    example: A1293
                featureId:
                    type: number
                    example: 1
                categoryId:
                    type: number
                    example: 2
                locationId:
                    type: number
                    example: 2
                price:
                    type: number
                    format: decimal(10,2)
                    example: 230000.0
                currencyCode:
                    type: string
                    example: USD
                status:
                    type: boolean
                    example: true
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                numberOfBedRoom:
                    type: number
                    example: 2
                numberOfToilet:
                    type: number
                    example: 2
                numberOfFloor:
                    type: number
                    example: 25
                direction:
                    type: string
                    example: West
                description:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
        PropertyJoinedAllTable:
            type: object
            properties:
                propertyId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Apartment for sale at Alphanam Luxury Apartment Danang
                code:
                    type: string
                    example: A1293
                price:
                    type: number
                    format: decimal(10,2)
                    example: 230000.0
                currencyCode:
                    type: string
                    example: USD
                status:
                    type: boolean
                    example: true
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                numberOfBedRoom:
                    type: number
                    example: 2
                numberOfToilet:
                    type: number
                    example: 2
                numberOfFloor:
                    type: number
                    example: 25
                direction:
                    type: string
                    example: West
                description:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                feature:
                    type: object
                    properties:
                        featureId:
                            type: number
                            example: 1
                        name:
                            type: string
                            example: Sale
                category:
                    type: object
                    properties:
                        categoryId:
                            type: number
                            example: 2
                        name:
                            type: string
                            example: House
                location:
                    type: object
                    properties:
                        locationId:
                            type: number
                            example: 2
                        wardCode:
                            type: string
                            example: 20275
                        districtCode:
                            type: string
                            example: 494
                        provinceCode:
                            type: string
                            example: 48
                        street:
                            type: string
                            example: Vo Nguyen Giap
                        address:
                            type: string
                            example: 100 Vo Nguyen Giap
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            imageId:
                                type: number
                                example: 10
                            imageUrl:
                                type: string
                                example: https://toanhuyhoang.com/wp-content/uploads/2023/09/z4961049532378_ad7a21ff4f9720289b0e09ce80cb0e2b.jpg
                seller:
                    type: object
                    properties:
                        userId:
                            type: number
                            example: 5
                        fullName:
                            type: string
                            example: Le Nhat Trinh
                        email:
                            type: string
                            example: lenhattrinh@gmail.com
                        phone:
                            type: string
                            example: 0899619250
                        avatar:
                            type: string
                            example: null
        Province:
            type: object
            properties:
                provinceCode:
                    type: string
                    example: 01
                nameEn:
                    type: string
                    example: Ha Noi
                fullNameEn:
                    type: string
                    example: Ha Noi City
                codeName:
                    type: string
                    example: ha_noi
        District:
            type: object
            properties:
                districtCode:
                    type: string
                    example: 490
                nameEn:
                    type: string
                    example: Lien Chieu
                fullNameEn:
                    type: string
                    example: Lien Chieu District
                codeName:
                    type: string
                    example: lien_chieu
                provinceCode:
                    type: string
                    example: 48
        Ward:
            type: object
            properties:
                wardCode:
                    type: string
                    example: 20194
                nameEn:
                    type: string
                    example: Hoa Hiep Bac
                fullNameEn:
                    type: string
                    example: Hoa Hiep Bac Ward
                codeName:
                    type: string
                    example: hoa_hiep_bac
                districtCode:
                    type: string
            example: 490
        User:
            type: object
            properties:
                userId:
                    type: number
                    example: 15
                roleId:
                    type: number
                    example: 1
                fullName:
                    type: string
                    example: Le Nhat Trinh
                email:
                    type: string
                    example: tldevuser@gmail.com
                phone:
                    type: string
                    example: 0899619252
                avatar:
                    type: string
                    example: null
                wardCode:
                    type: string
                    example: 20236
                districtCode:
                    type: string
                    example: 492
                provinceCode:
                    type: string
                    example: 48
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: 107
                balance:
                    type: number
                    format: decimal(10,2)
                    example: 500.00
                isActive:
                    type: boolean
                    example: true
                isEmailVerified:
                    type: boolean
                    example: false
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
        Tokens:
            type: object
            properties:
                accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE1LCJpYXQiOjE3MDcyOTE4MzYsImV4cCI6MTcwNzI5NTQzNiwidHlwZSI6ImFjY2VzcyJ9.T8u9lbLeeBXD4peVgar6YX6ZTWvMOeIjOAF_nXcIu9s
                refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE1LCJpYXQiOjE3MDcyOTE4MzYsImV4cCI6MTcwNzg5NjYzNiwidHlwZSI6InJlZnJlc2gifQ.iHT53WUnZjRbjfhc9Qrb-BUYpWCabsKmZMeRiA7wpQQ
        Seller:
            type: object
            properties:
                userId:
                    type: number
                    example: 21
                email:
                    type: string
                    example: tldevseller@gmail.com
                fullName:
                    type: string
                    example: Test Seller
                phone:
                    type: string
                    example: "0888888776"
                provinceCode:
                    type: string
                    example: 48
                districtCode:
                    type: string
                    example: 492
                wardCode:
                    type: string
                    example: 20236
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: 107
                roleId:
                    type: number
                    example: 2,
                isActive:
                    type: boolean
                    example: true
                isEmailVerified:
                    type: boolean
                    example: false,
                balance:
                    type: number
                    format: decimal(10,2)
                    example: 500.00
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
        NewSeller:
            type: object
            properties:
                email:
                    type: string
                    example: tldevseller@gmail.com
                password:
                    type: string
                    example: T12345678
                fullName:
                    type: string
                    example: Test Seller
                phone:
                    type: string
                    example: "0888888776"
                provinceCode:
                    type: string
                    example: "48"
                districtCode:
                    type: string
                    example: "492"
                wardCode:
                    type: string
                    example: "20236"
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: "107"
            required:
              - "email"
              - "password"
              - "fullName"
              - "phone"
              - "provinceCode"
              - "districtCode"
              - "wardCode"
              - "street"
        UserBody:
            type: object
            properties:
                email:
                    type: string
                    example: tldevuser@gmail.com
                password:
                    type: string
                    example: T12345678
            required:
              - "email"
              - "password"
        UserProfile:
            type: object
            properties:
                userId:
                    type: number
                    example: 2
                fullName:
                    type: string
                    example: "Le Nhat Trinh"
                email:
                    type: string
                    example: "mail.tldev@gmail.com"
                phone:
                    type: string
                    example: "0899619252"
                avatar:
                    type: string
                    example: null
                street:
                    type: string
                    example: "Bach Dang"
                address:
                    type: string
                    example: "107"
                balance:
                    type: number
                    format: decimal(10,2)
                    example: 500.00
                isActive:
                    type: boolean
                    example: true
                isEmailVerified:
                    type: boolean
                    example: false
                createdAt:
                    type: string
                    format: date-time
                    example: "2024-01-31T08:00:12.000Z"
                updatedAt:
                    type: string
                    format: date-time
                    example: "2024-02-09T05:10:01.000Z"
                role:
                    type: object
                    properties:
                        roleId:
                            type: number
                            example: 2
                        roleName:
                            type: string
                            example: "Seller"
                ward:
                    type: object
                    properties:
                        wardCode:
                            type: string
                            example: "20236"
                        fullNameEn:
                            type: string
                            example: "Hai Chau I Ward"
                province:
                    type: object
                    properties:
                        provinceCode:
                            type: string
                            example: "48"
                        fullNameEn:
                            type: string
                            example: "Da Nang City"
                district:
                    type: object
                    properties:
                        districtCode:
                            type: string
                            example: "492"
                        fullNameEn:
                            type: string
                            example: "Hai Chau District"
        PropertyOfSeller:
            type: object
            properties:
                propertyId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Apartment for sale at Alphanam Luxury Apartment Danang
                code:
                    type: string
                    example: A1293
                price:
                    type: number
                    format: decimal(10,2)
                    example: 230000.0
                currencyCode:
                    type: string
                    example: USD
                status:
                    type: boolean
                    example: true
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                numberOfBedRoom:
                    type: number
                    example: 2
                numberOfToilet:
                    type: number
                    example: 2
                numberOfFloor:
                    type: number
                    example: 25
                direction:
                    type: string
                    example: West
                description:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                feature:
                    type: object
                    properties:
                        featureId:
                            type: number
                            example: 1
                        name:
                            type: string
                            example: Sale
                category:
                    type: object
                    properties:
                        categoryId:
                            type: number
                            example: 2
                        name:
                            type: string
                            example: House
                location:
                    type: object
                    properties:
                        locationId:
                            type: number
                            example: 2
                        wardCode:
                            type: string
                            example: 20275
                        districtCode:
                            type: string
                            example: 494
                        provinceCode:
                            type: string
                            example: 48
                        street:
                            type: string
                            example: Vo Nguyen Giap
                        address:
                            type: string
                            example: 100 Vo Nguyen Giap
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            imageId:
                                type: number
                                example: 10
                            imageUrl:
                                type: string
                                example: https://toanhuyhoang.com/wp-content/uploads/2023/09/z4961049532378_ad7a21ff4f9720289b0e09ce80cb0e2b.jpg
        NewPropertyBody:
            properties:
                name:
                    type: string
                    example: "Boutique Hotel For Sale - 7 Suite Room in Son Tra District, Beach Area"
                code:
                    type: string
                    example: KS04
                featureId:
                    type: number
                    enum:
                      - 1
                      - 2
                    example: 1
                categoryId:
                    type: number
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                    example: 2
                provinceCode:
                    type: string
                    example: 48
                districtCode:
                    type: string
                    example: 493
                wardCode:
                    type: string
                    example: 20272
                street:
                    type: string
                    example: Ho Nghinh
                address:
                    type: string
                    example: Ho Nghinh
                price:
                    type: number
                    example: 430000
                currencyCode:
                    type: string
                    example: USD
                landArea:
                    type: string
                    example: 92.5
                areaOfUse:
                    type: string
                    example: 92.5
                numberOfBedRoom:
                    type: number
                    example: 7
                    description: Number of bedrooms in the Boutique Hotel
                numberOfToilet:
                    type: number
                    example: 8
                numberOfFloor:
                    type: number
                    example: 5
                direction:
                    type: string
                    example: West
                description:
                    type: string
                    example: Boutique Hotel For Sale Bedroom House for sale in An Hai Bac, Da Nang
                images:
                    type: array
                    example: ["link1", "link2"]
                    items:
                        type: string
                        description: Link to images of the Boutique Hotel
            required:
                - "name"
                - "code"
                - "featureId"
                - "categoryId"
                - "provinceCode"
                - "districtCode"
                - "wardCode"
                - "street"
                - "price"
                - "currencyCode"
                - "numberOfBedRoom"
                - "numberOfToilet"
                - "numberOfFloor"
                - "images"
        NewPropertyResponse:
            type: object
            properties:
                status:
                    type: boolean
                    example: true
                propertyId:
                    type: number
                    example: 24
                name:
                    type: string
                    example: Boutique Hotel For Sale - 7 Suite Room in Son Tra District, Beach Area
                code:
                    type: string
                    example: KS04
                featureId:
                    type: number
                    example: 1
                categoryId:
                    type: number
                    example: 5
                price:
                    type: number
                    format: decimal(10,2)
                    example: 430000.0
                currencyCode:
                    type: string
                    example: USD
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 92.5
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 92.5
                numberOfBedRoom:
                    type: number
                    example: 7
                numberOfToilet:
                    type: number
                    example: 8
                numberOfFloor:
                    type: number
                    example: 5
                direction:
                    type: string
                    example: West
                description:
                    type: string
                    example: Boutique Hotel For Sale Bedroom House for sale in An Hai Bac, Da Nang
                locationId:
                    type: number
                    example: 24
                    description: ID of the location of the property
                userId:
                    type: number
                    example: 2
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-10T03:20:55.544Z
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-10T03:20:55.544Z
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            imageId:
                                type: number
                                example: 211
                            propertyId:
                                type: number
                                example: 24
                            imageUrl:
                                type: string
                                example: link1
                            updatedAt:
                                type: string
                                example: 2024-02-10T03:20:55.557Z
                            createdAt:
                                type: string
                                example: 2024-02-10T03:20:55.557Z
        UpdatePropertyBody:
            type: object
            properties:
                name:
                    type: string
                    example: "Boutique Hotel For Sale - 7 Suite Room in Son Tra District, Beach Area"
                code:
                    type: string
                    example: CODE99
                status:
                    type: boolean
                    example: false
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 92.5
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 92.5
                price:
                    type: number
                    format: decimal(10,2)
                    example: 460000.0
                direction:
                    type: string
                    example: West
                description:
                    type: string
                    example: New description
        NewContactBody:
            type: object
            properties:
                propertyId:
                    type: number
                    example: 4
                sellerId:
                    type: number
                    example: 2
                name:
                    type: string
                    example: Le Khach Hang
                email:
                    type: string
                    example: avs73ltqb@gmail.com
                phone:
                    type: string
                    example: 0899619250
                message:
                    type: string
                    example: I want to rent your property!
            required:
                -   "propertyId"
                -   "sellerId"
                -   "name"
                -   "email"
                -   "phone"
                -   "message"
        UpdateUserProfile:
            type: object
            properties:
                fullName:
                    type: string
                    example: "Le Nhat Trinh"
                phone:
                    type: string
                    example: "0899619252"
                provinceCode:
                    type: string
                    example: "48"
                districtCode:
                    type: string
                    example: "492"
                wardCode:
                    type: string
                    example: "20236"
                street:
                    type: string
                    example: "Bach Dang"
                address:
                    type: string
                    example: "107"
        DepositTransaction:
            type: object
            properties:
                transactionId:
                    type: number
                    example: 1
                userId:
                    type: number
                    example: 2
                amount:
                    type: number
                    format: decimal(10,2)
                    example: 50.5
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-21T04:32:26.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-21T04:32:26.000Z
        ExpenseTransaction:
            type: object
            properties:
                transactionId:
                    type: number
                    example: 1
                userId:
                    type: number
                    example: 2
                amount:
                    type: number
                    format: decimal(10,2)
                    example: 20
                description:
                    type: string
                    example: "Create new property!. ID: 27"
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-21T04:32:26.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-21T04:32:26.000Z
        UpdateUserBodyByAdmin:
            type: object
            properties:
                roleId:
                    type: number
                    enum:
                        - 1
                        - 2
                        - 3
                fullName:
                    type: string
                    example: Le Nhat Trinh
                phone:
                    type: string
                    example: 0899619252
                isEmailVerified:
                    type: boolean
                    example: true
                avatar:
                    type: string
                    example: 'link'
                provinceCode:
                    type: string
                    example: 48
                districtCode:
                    type: string
                    example: 492
                wardCode:
                    type: string
                    example: 20236
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: 107
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
